<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PersonnelDataSet" targetNamespace="http://tempuri.org/PersonnelDataSet.xsd" xmlns:mstns="http://tempuri.org/PersonnelDataSet.xsd" xmlns="http://tempuri.org/PersonnelDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PersonnelConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PersonnelConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WinUI.Properties.Settings.GlobalReference.Default.PersonnelConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonnelTableAdapter" GeneratorDataComponentClassName="PersonnelTableAdapter" Name="Personnel" UserDataComponentName="PersonnelTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PersonnelConnectionString (Settings)" DbObjectName="dbo.Personnel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Personnel] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Position] = @Original_Position) AND ([HourlyPay] = @Original_HourlyPay))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_HourlyPay" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="HourlyPay" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Personnel] ([Id], [Name], [Position], [HourlyPay]) VALUES (@Id, @Name, @Position, @HourlyPay);
SELECT Id, Name, Position, HourlyPay FROM Personnel WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@HourlyPay" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="HourlyPay" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, Name, Position, HourlyPay FROM dbo.Personnel</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Personnel] SET [Id] = @Id, [Name] = @Name, [Position] = @Position, [HourlyPay] = @HourlyPay WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Position] = @Original_Position) AND ([HourlyPay] = @Original_HourlyPay));
SELECT Id, Name, Position, HourlyPay FROM Personnel WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@HourlyPay" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="HourlyPay" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_HourlyPay" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="HourlyPay" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Position" DataSetColumn="Position" />
              <Mapping SourceColumn="HourlyPay" DataSetColumn="HourlyPay" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PersonnelConnectionString (Settings)" DbObjectName="dbo.Personnel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="SortByPayAscending" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByPayAsc" GeneratorSourceName="SortByPayAscending" GetMethodModifier="Public" GetMethodName="GetDataByPayAsc" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByPayAsc" UserSourceName="SortByPayAscending">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT HourlyPay, Id, Name, Position FROM Personnel ORDER BY HourlyPay</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PersonnelConnectionString (Settings)" DbObjectName="dbo.Personnel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="SortByPayDesc" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByDesc" GeneratorSourceName="SortByPayDesc" GetMethodModifier="Public" GetMethodName="GetDataByDesc" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByDesc" UserSourceName="SortByPayDesc">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, Name, Position, HourlyPay FROM dbo.Personnel Order By HourlyPay Desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PersonnelDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PersonnelDataSet" msprop:Generator_UserDSName="PersonnelDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Personnel" msprop:Generator_TableClassName="PersonnelDataTable" msprop:Generator_TableVarName="tablePersonnel" msprop:Generator_RowChangedName="PersonnelRowChanged" msprop:Generator_TablePropName="Personnel" msprop:Generator_RowDeletingName="PersonnelRowDeleting" msprop:Generator_RowChangingName="PersonnelRowChanging" msprop:Generator_RowEvHandlerName="PersonnelRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonnelRowDeleted" msprop:Generator_RowClassName="PersonnelRow" msprop:Generator_UserTableName="Personnel" msprop:Generator_RowEvArgName="PersonnelRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Position" msprop:Generator_ColumnVarNameInTable="columnPosition" msprop:Generator_ColumnPropNameInRow="Position" msprop:Generator_ColumnPropNameInTable="PositionColumn" msprop:Generator_UserColumnName="Position">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="HourlyPay" msprop:Generator_ColumnVarNameInTable="columnHourlyPay" msprop:Generator_ColumnPropNameInRow="HourlyPay" msprop:Generator_ColumnPropNameInTable="HourlyPayColumn" msprop:Generator_UserColumnName="HourlyPay" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Personnel" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>